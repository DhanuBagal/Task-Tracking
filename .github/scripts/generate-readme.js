const fs = require('fs');
const path = require('path');

function readJSON(p) {
  try { return JSON.parse(fs.readFileSync(p, 'utf8')); }
  catch (e) { return null; }
}

function listFiles(dir, base = '') {
  let out = [];
  if (!fs.existsSync(dir)) return out;
  for (const name of fs.readdirSync(dir)) {
    const full = path.join(dir, name);
    const rel = path.join(base, name);
    const stat = fs.statSync(full);
    if (stat.isDirectory()) {
      out = out.concat(listFiles(full, rel));
    } else {
      out.push(rel.replace(/\\/g, '/'));
    }
  }
  return out;
}

const pkg = readJSON('package.json') || {};
const title = pkg.name || path.basename(process.cwd());
const desc = pkg.description || '';
const nodeVer = pkg.engines && pkg.engines.node ? pkg.engines.node : '';
let files = listFiles('src');
files = files.sort();

const now = new Date().toISOString();
let content = `# ${title}\n\n`;
if (desc) content += `${desc}\n\n`;
content += `Generated: ${now}\n\n`;

if (nodeVer) content += `Node: ${nodeVer}\n\n`;

content += '## Files in src/\n\n';
if (files.length === 0) {
  content += '_No files found in `src/`_\n';
} else {
  for (const f of files) {
    content += `- \`${f}\`\n`;
  }
}

content += '\n---\n\n';
content += 'This README is auto-generated by `.github/scripts/generate-readme.js` on push.\n';

const outPath = 'README.md';
const prev = fs.existsSync(outPath) ? fs.readFileSync(outPath, 'utf8') : null;

if (prev !== content) {
  fs.writeFileSync(outPath, content, 'utf8');
  console.log('README.md updated');
  process.exit(0);
} else {
  console.log('README.md unchanged');
  process.exit(0);
}
